--상품테이블 생성
CREATE TABLE PRODUCTS(
  PCODE INT NOT NULL PRIMARY KEY,
  PNAME VARCHAR(200) NOT NULL,
  PPRICE INT DEFAULT 0
);

--테이블삭제
DROP TABLE PRODUCTS;

--테이블 정보 확인
DESC PRODUCTS;

--샘플데이터 입력
INSERT INTO PRODUCTS(PCODE, PNAME, PPRICE)
VALUES(100, '삼성 냉장고', 2500000);
INSERT INTO PRODUCTS(PCODE, PNAME, PPRICE)
VALUES(101, '엘지 냉장고', 2800000);
INSERT INTO PRODUCTS(PCODE, PNAME, PPRICE)
VALUES(102, '엘지 세탁기', 2300000);
INSERT INTO PRODUCTS(PCODE, PNAME, PPRICE)
VALUES(103, '삼성 세탁기', 2700000);

--모든 데이터 출력
SELECT * FROM PRODUCTS;

/* PCODE 104번부터 시작, 1씩 증가 */
CREATE SEQUENCE PCODE_SEQ START WITH 104 INCREMENT BY 1;

INSERT INTO PRODUCTS(PCODE, PNAME, PPRICE)
VALUES(PCODE_SEQ.NEXTVAL, '삼성 스타일러', 3000000);

--자동증가 판매코드 시퀸스
--CREATE SEQUENCE CODE_SEQ START WITH 1 INCREMENT BY 1; -- code_seq라는 시퀀스 생성, 1부터 1씩증가
--SELECT CODE_SEQ.NEXTVAL FROM DUAL; -- 복습 중 시퀀스의 이름이 바뀜. 아래꺼 사용
CREATE SEQUENCE SEQ_SCODE START WITH 1 INCREMENT BY 1

--판매테이블 생성
CREATE TABLE SALE(
  SCODE INT NOT NULL PRIMARY KEY, -- 상품코드
  PCODE INT NOT NULL, -- 판매코드
  QNT INT DEFAULT 1, -- 판매수량
  SPRICE INT DEFAULT 0, -- 판매가격
  SDATE DATE DEFAULT SYSDATE, -- 판매날짜
  FOREIGN KEY(PCODE) REFERENCES PRODUCTS(PCODE) -- 앞 피코드(판매코드), 뒤 피코드(상품코드)
); -- 포린키(참조키, 외래키)

--판매테이블 샘플데이터
INSERT INTO SALE(SCODE, PCODE, QNT, SPRICE)
VALUES(SEQ_SCODE.NEXTVAL,100,2,2500000);
INSERT INTO SALE(SCODE, PCODE, QNT, SPRICE)
VALUES(SEQ_SCODE.NEXTVAL,100,3,2400000);
INSERT INTO SALE(SCODE, PCODE, QNT, SPRICE)
VALUES(SEQ_SCODE.NEXTVAL,101,1,2800000);
INSERT INTO SALE(SCODE, PCODE, QNT, SPRICE)
VALUES(SEQ_SCODE.NEXTVAL,101,1,2800000);


SELECT * FROM SALE;



CREATE VIEW VIEW_SALE AS
SELECT S.SCODE, S.PCODE, P.PNAME,
S.SPRICE, S.QNT, S.SPRICE*S.QNT SSUM , P.PPRICE, TO_CHAR(S.SDATE, 'YYYY-MM-DD HH:MI:ss') FDATE -- SSUM은 별명지정
FROM SALE S, PRODUCTS P -- S.DATE만 해도 날짜는 생성됨. 그 좌우에 있는 것은 추가한 것들
WHERE S.PCODE=P.PCODE
ORDER BY S.SCODE DESC;

SELECT * FROM VIEW_SALE;
SELECT * FROM VIEW_SALE WHERE PNAME LIKE '%삼성%';
SELECT SUM(QNT) FROM VIEW_SALE WHERE PNAME LIKE '%삼성%'; -- 삼성 판매한 갯수 확인

-- 관계도를 다이어그램으로 만들 수 있음
-- 보기 - 데이터모듈- 브라우저 - 관계형모델

-- 테이블조인
SELECT S.*, P.PNAME --S의 전부, P의 PNAME만
FROM SELE S, PRODUCTS P -- 이름,별병
WHERE S.PCODE = P.PCODE; -- 판매테이블의 상품코드와 상품테이블의 상품코드를 조인(연결)

CREATE VIEW VIEW_SALE AS 
SELECT S.*, P.PNAME
FROM SALE S, PRODUCTS P
WHERE S.PCODE=P.PCODE;



--VIEW 사용
create view view_salse as
select s.*, p.pname
from sale s, products p
where s.pcode=p.pcode; -- 같은 것을 연결

select * fROm view_sale;
select * fROm view_sale WHERE PNAME LIKE '%삼성%'
ORDER BY SCODE DESC;


COMMIT;

DROP TABLE SALE; -- 자식을 먼저 지우고
DROP TABLE PRODUCTS; -- 그 다음 부모를 지운다


SELECT * FROM VIEW_SALE WHERE PCODE=100;
SELECT * FROM SALE WHERE PCODE=100;
SELECT * FROM SALE WHERE PCODE=101;

SELECT * FROM SALE;
SELECT * FROM SALE WHERE PCODE=100; -- 100번 상품만 조회


SELECT PCODE, PNAME, SUM(QNT) FROM VIEW_SALE
GROUP BY PCODE, PNAME;

SELECT PCODE, PNAME, SUM(QNT), SUM(SPRICE*QNT) FROM VIEW_SALE
GROUP BY PCODE, PNAME;

SELECT PCODE, PNAME, SUM(QNT), sum_qnt, SUM(SPRICE*QNT) sum_price FROM VIEW_SALE
GROUP BY PCODE, PNAME
ORDER BY PCODE;